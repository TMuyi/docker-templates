services:
  nginxproxymanager:
    image: "jc21/nginx-proxy-manager:latest"
    container_name: nginxproxymanager
    restart: unless-stopped
    ports:
      - "80:80"
      - "81:81"
      - "443:443"
    volumes:
      - ../nginx/data:/data
      - ../nginx/letsencrypt:/etc/letsencrypt

  jellyfin:
    image: lscr.io/linuxserver/jellyfin:latest
    container_name: jellyfin
    restart: unless-stopped
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Europe/Berlin
    volumes:
      - ../jellyfin/data/config:/config
      - ../jellyfin/data/data/cache:/cache
      # - ./jellyfin/tvshows:/data/tvshows
      # - ./jellyfin/movies:/data/movies

  unifi-controller:
    image: lscr.io/linuxserver/unifi-network-application:latest
    container_name: unifi-network-application
    depends_on:
      - unifi-db
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Etc/UTC
      - MONGO_USER=unifi
      - MONGO_PASS=
      - MONGO_HOST=unifi-db
      - MONGO_PORT=27017
      - MONGO_DBNAME=unifi
      - MONGO_AUTHSOURCE=admin
      - MEM_LIMIT=1024 #optional
      - MEM_STARTUP=1024 #optional
      - MONGO_TLS= #optional
      - MONGO_AUTHSOURCE= #optional
    volumes:
      - ../unifi-controller/config:/config
    # ports:
    #   - 8443:8443
    #   - 3478:3478/udp
    #   - 10001:10001/udp
    #   - 8080:8080
    # - 1900:1900/udp #optional
    # - 8843:8843 #optional
    # - 8880:8880 #optional
    # - 6789:6789 #optional
    # - 5514:5514/udp #optional
    restart: unless-stopped

  unifi-db:
    image: docker.io/mongo:4.4
    container_name: unifi-db
    # ports:
    #   - 27017:27017
    volumes:
      - ../unifi-controller/data/db:/data/db
      - ../unifi-controller/data/db/init-mongo.js:/docker-entrypoint-initdb.d/init-mongo.js:ro
    restart: unless-stopped
